# Each new term in the Fibonacci sequence is generated by adding the previous 
# two terms. By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 
# 8, 13, 21, 34, 55, 89,... By considering the terms in the Fibonacci sequence
# whose values do not exceed four million, find the sum of the even-valued 
# terms.

first_fib_number = int(input('What would you like to be the first number of the Fibonacci sequence? '))
second_fib_number = int(input('What would you like to be the second number of the Fibonacci sequence? '))
max_value = int(input('What would you like the maximum value of this Fibonacci sequence to be? '))

fibonacci_array = [first_fib_number, second_fib_number]

while fibonacci_array[-1]+fibonacci_array[-2]<= max_value:
    next_fib_num = fibonacci_array[-1]+fibonacci_array[-2]
    fibonacci_array.append(next_fib_num)
    
print(*fibonacci_array)

def return_evens(a_list_of_ints):
    a = []
    for x in a_list_of_ints:
        if x%2 == 0:
            a.append(x)
    return a
    
print(*return_evens(fibonacci_array))

print(sum(return_evens(fibonacci_array)))